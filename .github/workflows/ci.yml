name: Continuous Integration

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches: ["master"]
  pull_request:

env:
  CARGO_TERM_COLOR: "always"

permissions:
  contents: read

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os.fullname }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - { prettyname: linux, fullname: ubuntu-latest }
          - { prettyname: windows, fullname: windows-latest }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: ./.github/workflows/actions/setup-rust
        with:
          components: llvm-tools-preview

      - name: Install cargo-nextest and cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest,cargo-llvm-cov

      # rust-toolchain.toml contains components and targets that we don't need for testing
      # We just simply remove it to avoid installing unnecessary components and targets
      # This is intended to save time
      - name: Remove rust-toolchain.toml
        shell: bash
        run: rm rust-toolchain.toml

      - name: Test
        env:
          RUST_LOG: "trace"
          RUST_BACKTRACE: "1"
        shell: bash
        run: |
          cargo llvm-cov nextest \
            --cobertura \
            --output-path cobertura.xml \
            --no-fail-fast \
            --hide-progress-bar \
            --success-output never \
            --failure-output final \
            --branch

      - name: Upload Test Report to artifact
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-results-${{ matrix.os.prettyname }}
          path: target/nextest/default/junit.xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: coverage-${{ matrix.os.prettyname }}
          path: cobertura.xml

  codecov:
    name: Codecov
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      # Codecov requires source code
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: false

      - name: Download test results
        uses: actions/download-artifact@v5
        with:
          pattern: test-results-*
          merge-multiple: false

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage-*/cobertura.xml
          report_type: coverage

      - name: Upload test results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: test-results-*/junit.xml
          report_type: test_results
