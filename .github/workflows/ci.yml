name: Continuous Integration

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: 'always'
  TOOLCHAIN_VERSION: 'nightly-2025-02-01'

permissions:
  contents: read

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os.fullname }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - { prettyname: linux, fullname: ubuntu-latest }
          - { prettyname: windows, fullname: windows-latest }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        run: |
          rustup toolchain install ${{ env.TOOLCHAIN_VERSION }} --profile minimal
          rustup default ${{ env.TOOLCHAIN_VERSION }}
          rustup override set ${{ env.TOOLCHAIN_VERSION }}

      - name: Setup Cargo-binstall
        uses: ./.github/workflows/actions/setup-cargo-binstall

      - name: Install cargo-nextest
        shell: bash
        run: |
          cargo binstall cargo-nextest
          cargo nextest --version

      - name: Compile
        run: cargo nextest run --no-run

      - name: Test
        env:
          RUST_LOG: "trace"
          RUST_BACKTRACE: "1"
        run: |
          cargo nextest run --no-fail-fast --hide-progress-bar --success-output immediate --failure-output immediate

      - name: Upload Test Report to artifact
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-results-${{ matrix.os.prettyname }}
          path: target/nextest/default/junit.xml

  coverage:
    name: Coverage
    runs-on: ${{ matrix.os.fullname }}
    strategy:
      fail-fast: false
      matrix:
        os:
          # This workflow only collects coverage, to run on Windows is a waste of resources
          - { prettyname: linux, fullname: ubuntu-latest }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        run: |
          rustup toolchain install ${{ env.TOOLCHAIN_VERSION }} --profile minimal
          rustup default ${{ env.TOOLCHAIN_VERSION }}
          rustup override set ${{ env.TOOLCHAIN_VERSION }}

      - name: Setup Cargo-binstall
        uses: ./.github/workflows/actions/setup-cargo-binstall

      - name: Install cargo-tarpaulin
        shell: bash
        run: |
          cargo binstall cargo-tarpaulin
          cargo tarpaulin --version

      - name: Compile
        run: cargo test --no-run

      - name: Test
        env:
          RUST_LOG: "trace"
        run: |
          cargo tarpaulin --out Xml --out Html --output-dir . -- --show-output

      - name: Process coverage result
        run: |
          mkdir -p coverage
          cp cobertura.xml coverage/
          cp tarpaulin-report.html coverage/

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os.prettyname }}
          path: coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/cobertura.xml

  annotate:
    name: Annotate
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    needs: test
    permissions:
      contents: read
      actions: read
      pull-requests: write
      checks: write
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 'github-token' is required when downloading artifacts from a different repository or from a different workflow run.
      - name: Download test results
        uses: actions/download-artifact@v5
        with:
          pattern: test-results-*
          merge-multiple: false
          github-token: ${{ github.token }}

      - name: Annotate CI run with test results
        uses: mikepenz/action-junit-report@v5
        with:
          check_name: Test Results
          report_paths: test-results-*/junit.xml
          include_time_in_summary: true
          truncate_stack_traces: false
          check_title_template: "{{SUITE_NAME}}::{{TEST_NAME}}"
          transformers: |
            [{"searchValue":"\\\\\\","replaceValue":"/"}]
          detailed_summary: true
          follow_symlink: true
          comment: ${{ github.event.pull_request.number != '' }}
          annotate_only: true

